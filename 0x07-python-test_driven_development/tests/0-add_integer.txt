==============================
Defines an integer addition function
add_integer(a, b=98)-  returns the addition of a and b

=============================

::
    >>> add_integer = __import__('0-add_integer').add_integer
    >>> # CASE I: all numbers are positive integers
    >>> add_integer(2, 3)
    5
    >>> # CASE 2: a is a positive floaing point number and b is a positive integer
    >>> add_integer(2.9, 4)
    6
    >>> # CASE 3: a is a positive integer and b is a negative integer
    >>> add_integer(5, -2)
    3
    >>> # CASE 4: a and b are both positive floating point integers
    >>> add_integer(3.4, 5.4)
    8
    >>> # CASE 5: a and b are both negative foating point numbers
    >>> add_integer(-2.3, -4.3)
    -6
    >>> # CASE 6: providing only the required argument a
    >>> add_integer(2)
    100
    >>> # CASE 7: using arguments that are not numbers
    >>> add_integer("NaN", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer(3, "NaN")
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer("a", "b")
    Traceback (most recent call last):
    TypeError: a must be an integer
