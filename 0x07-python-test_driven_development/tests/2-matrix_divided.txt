The ```matrix_divided function```
==================================
This function divides a matrix otherwise raises specific errors

------------------------------------------------------
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [3, 6, 9],
    ...     [12, 15, 18]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
    >>> matrix = None
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = []
    >>> print(matrix_divided(matrix, 4))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 2))
    [[]]
    >>> matrix = [
    ...     [1,2,3],
    ...     [6,7,'a']
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [
    ...     [1,2,3],
    ...     [2,3]
    ... ]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
    >>> matrix = [
    ...     [1,2,3],
    ...     [2,3,4]
    ... ]
    >>> print(matrix_divided(matrix, 'a'))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
    >>> matrix = [
    ...     [1,2,3],
    ...     [4,5,6]  
    ... ]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
